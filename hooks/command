#!/bin/bash
set -euo pipefail

DIR="$(cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd)"
# command is run from the root directory
. "$DIR/../lib/common.sh"

# Generate buildInformation.json, with commit message json sanitised
SANITISED_BUILDKITE_MESSAGE=$(echo "$BUILDKITE_MESSAGE" | jq -aRs .)
cat << EOF > ./buildInformation.json
{
  "BuildEnvironment":"Buildkite",
  "Branch":"$BUILDKITE_BRANCH",
  "BuildNumber":"$BUILDKITE_BUILD_NUMBER",
  "BuildUrl":"$BUILDKITE_BUILD_URL",
  "VcsType":"Git",
  "VcsRoot":"$BUILDKITE_REPO",
  "VcsCommitNumber":"$BUILDKITE_COMMIT",
  "Commits":[
      {
         "Id":"$BUILDKITE_COMMIT",
         "Comment":$SANITISED_BUILDKITE_MESSAGE
      }
   ]
}
EOF
cat ./buildInformation.json

octo_release_command=("octo" "create-release" "--progress" "--project=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PROJECT")

if [[ -n "${BUILDKITE_PLUGIN_OCTOPUS_RELEASE_RELEASENUMBER:-}" ]] ; then
    octo_release_command+=("--releaseNumber=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_RELEASENUMBER")
    octo_prevent_progression_command+=("--releaseNumber=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_RELEASENUMBER")
    PLUGIN_PACKAGE_VERSION=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_RELEASENUMBER
fi

if [[ -n "${BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PACKAGEVERSION:-}" ]] ; then
    octo_release_command+=("--packageVersion=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PACKAGEVERSION")
    octo_prevent_progression_command+=("--version=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PACKAGEVERSION")
    PLUGIN_PACKAGE_VERSION=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PACKAGEVERSION
fi

if [[ -n "${BUILDKITE_PLUGIN_OCTOPUS_RELEASE_RELEASECHANNEL:-}" ]] ; then
    octo_release_command+=("--channel=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_RELEASECHANNEL")
fi

if [[ -n "${BUILDKITE_PLUGIN_OCTOPUS_RELEASE_RELEASENOTESARTIFACTNAME:-}" ]] ; then
    buildkite-agent artifact \
        download \
        "$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_RELEASENOTESARTIFACTNAME" \
        "."
    
    octo_release_command+=("--releaseNotesFile=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_RELEASENOTESARTIFACTNAME")
fi

octo_pack_command=("octo" "pack" "--id=${BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PACKAGEID:-}" "--format=Zip" "--version=$PLUGIN_PACKAGE_VERSION")
octo_push_command=("octo" "push" "--package=${BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PACKAGEID:-}.${PLUGIN_PACKAGE_VERSION}.zip")
octo_build_info_command=("octo" "build-information" "--package-id=${BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PACKAGEID:-}" "--version=$PLUGIN_PACKAGE_VERSION" "--file=buildInformation.json")
octo_prevent_progression_command=()
PREVENT_PROGRESSION=false


PACKAGEINCLUDE_LIST=$(plugin_read_list_attribute PACKAGEINCLUDE)
if [[ -n "${PACKAGEINCLUDE_LIST:-}" ]] ; then
    echo "INCLUDE!"
    echo "$PACKAGEINCLUDE_LIST"

    while IFS=$'\n' read -r pattern ; do
        [[ -n "${pattern:-}" ]] && octo_pack_command+=("--include=$pattern")
    done <<< "$(printf '%s\n%s' \
        "$PACKAGEINCLUDE_LIST")"
fi

PREVENTPROGRESSIONONFAIL_LIST=$(plugin_read_list_attribute PREVENTPROGRESSIONONFAIL)
if [[ -n "${PREVENTPROGRESSIONONFAIL_LIST:-}" ]] ; then
    echo "PROGRESSION!"
    echo "$PREVENTPROGRESSIONONFAIL_LIST"

    PREVENT_REASON=()
    while IFS=$'\n' read -r step_key ; do
        if [[ $(buildkite-agent step get "outcome" --step $step_key ) != "passed" ]]; then
            PREVENT_PROGRESSION=true
            PREVENT_REASON+=("$step_key")
        fi;
    done <<< "$(printf '%s\n%s' \
        "$PREVENTPROGRESSIONONFAIL_LIST")"

    if [[ $PREVENT_PROGRESSION == "true" ]]; then
        octo_prevent_progression_command+=("octo" "prevent-releaseprogression" "--project=$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PROJECT" "--version=$PLUGIN_PACKAGE_VERSION" "--reason=Steps did not pass: ${PREVENT_REASON[@]}")
    fi;

fi

function run_octopushpack() {
    "${octo_pack_command[@]}"
    "${octo_push_command[@]}"
    "${octo_build_info_command[@]}"
}

if [[ -n "${BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PACKAGEID:-}" ]] ; then
    echo "--- :hammer: Running octo push+pack"
    printf "%q " "${octo_pack_command[@]}"
    echo
    printf "%q " "${octo_push_command[@]}"
    echo
    printf "%q " "${octo_build_info_command[@]}"
    echo
    run_octopushpack
fi

function run_octorelease() {
    "${octo_release_command[@]}"
}

echo "--- :hammer: Running octo release"
printf "%q " "${octo_release_command[@]}"
echo
run_octorelease

if [[ $PREVENT_PROGRESSION == "true" ]]; then
    function run_octopreventrelease() {
        "${octo_prevent_progression_command[@]}"
    }

    echo "--- :x: Preventing release from progressing"
    echo "The following steps failed and will prevent release progress:" "${PREVENT_REASON[@]}"
    printf "%q " "${octo_prevent_progression_command[@]}"
    echo
    run_octopreventrelease
fi

# Octopus Release Annotation
cat << EOF | buildkite-agent annotate --context 'buildkite-plugin-octopus-release-' --style 'info'
## Octopus Release [$PLUGIN_PACKAGE_VERSION]($OCTOPUS_CLI_SERVER/app#/projects/$BUILDKITE_PLUGIN_OCTOPUS_RELEASE_PROJECT/deployments/releases/$PLUGIN_PACKAGE_VERSION)
EOF

exit 0
